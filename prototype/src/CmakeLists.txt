# my main cmake file
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.4)

PROJECT(${PRJ_NAME})

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}")

IF ( DEFINED CMAKE_LIBRARY_ARCHITECTURE )
    SET (TARGET_ARCHITECTURE ${CMAKE_LIBRARY_ARCHITECTURE}) 
ELSE()
    IF ( DEFINED TARGET_BITNESS )
		SET (TARGET_ARCHITECTURE ${CMAKE_SYSTEM_NAME}_${CMAKE_SYSTEM_PROCESSOR}_${TARGET_BITNESS} )
    ELSE()
		SET (TARGET_ARCHITECTURE ${CMAKE_SYSTEM_NAME}_${CMAKE_SYSTEM_PROCESSOR} )
	ENDIF()
ENDIF()

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${TARGET_ARCHITECTURE}")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${TARGET_ARCHITECTURE}")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${TARGET_ARCHITECTURE}")

MESSAGE("the system type is:" ${CMAKE_SYSTEM_NAME})
IF ( ${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	INCLUDE(../config/winconf.cmake)
ELSE()
	IF ( ${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
		INCLUDE(../config/macconf.cmake)
	ELSE()
		INCLUDE(../config/linuxconf.cmake)
	ENDIF()
ENDIF()

SET(PROJECT_INCLUDE_DIR "${PROJECT_SOURCE_DIR}")

FILE(GLOB_RECURSE ${PROJECT_NAME}_SRC RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.cpp *.c)
FILE(GLOB_RECURSE ${PROJECT_NAME}_HEADERS *.h)


INCLUDE_DIRECTORIES(
    ${EXTRA_INCLUDES}
    ${CMAKE_CURRENT_SOURCE_DIR}
    ) 

ADD_EXECUTABLE(${PROJECT_NAME}  ${${PROJECT_NAME}_SRC} )
#target_link_libraries(${PROJECT_NAME} ${REQUIRED_LIBRARIES})