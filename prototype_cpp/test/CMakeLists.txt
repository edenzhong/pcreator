# test cmake file
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.4)

IF ("$ENV{GTEST_ROOT}" STREQUAL "")
	MESSAGE(STATUS "No test building.")
ELSE()
	MESSAGE(STATUS "Building test")
	PROJECT(${PRJ_NAME}_test)


	SET(PROJECT_INCLUDE_DIR "${PROJECT_SOURCE_DIR}")
	SET(TARGET_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../src)

	FILE(GLOB_RECURSE TARGET_CPP_SRC  ${TARGET_SRC_DIR}/*.cpp)
	FILE(GLOB_RECURSE TARGET_C_SRC  ${TARGET_SRC_DIR}/*.c)

	FILE(GLOB_RECURSE ${PROJECT_NAME}_SRC RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.cpp *.c)
	FILE(GLOB_RECURSE ${PROJECT_NAME}_HEADERS *.h)

	IF ( ${WIN32} )
		MESSAGE(STATUS "system is win32")
		INCLUDE(../config/winconf.cmake)
	ELSE()
		IF ( ${APPLE} )
			MESSAGE(STATUS "system is apple")
			INCLUDE(../config/macconf.cmake)
		ELSE()
			MESSAGE(STATUS "system is linux")
			INCLUDE(../config/linuxconf.cmake)
		ENDIF()
	ENDIF()

	INCLUDE_DIRECTORIES(
	    ${CMAKE_CURRENT_SOURCE_DIR}
	    ${CMAKE_CURRENT_SOURCE_DIR}/../inc
	    ${EXTRA_INCLUDES}
	    ${TEST_INCLUDES}
	    ) 
	LINK_DIRECTORIES(
		${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
		${EXTRA_LIBS}
		${TEST_LIBS}
		)

	ADD_EXECUTABLE(${PROJECT_NAME}  ${${PROJECT_NAME}_SRC} ${TARGET_CPP_SRC} ${TARGET_C_SRC})
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${REQUIRED_LIBRARIES} ${TEST_REQUIRED_LIBRARIES})
	#TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${TEST_REQUIRED_LIBRARIES})
ENDIF()